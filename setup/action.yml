name: Setup CI/CD
description: Configures various useful things for my personal CI/CD workflows.

inputs:
  python-version:
    description: Python version to install.
    required: false
  python-version-file:
    description: File containing the Python version to install.
    required: false
  python-packages:
    description: Python packages to install.
    required: false
  node-version:
    description: Node version to install.
    required: false
  npm-packages:
    description: NPM packages to install.
    required: false
  role-to-assume:
    description: AWS IAM role to assume when setting up AWS credentials. Enter "default" to use the global GitHub Actions CDK role, or "repo" to use a standard per-repo role deployed by the prod-object-ci stack.
    required: false
  aws-region:
    description: AWS region.
    required: false
    default: us-east-1

runs:
  using: composite
  steps:
    # Python

    - if: inputs.python-version || inputs.python-version-file
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        python-version-file: ${{ inputs.python-version-file }}

    - if: inputs.python-version || inputs.python-version-file || inputs.python-packages
      uses: yezz123/setup-uv@v4

    - if: inputs.python-packages
      name: Install Python packages
      shell: bash
      run: uv pip install --system ${{ inputs.python-packages }}

    # Node

    - if: inputs.node-version
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - if: inputs.npm-packages
      name: Install NPM packages
      shell: bash
      run: npm install -g ${{ inputs.npm-packages }}

    # AWS

    - if: inputs.role-to-assume
      name: Resolve inputs.role-to-assume
      id: resolve-role
      shell: bash
      run: |
        case '${{ inputs.role-to-assume }}' in
          default)
            role='arn:aws:iam::511603859520:role/prod-objectobject-ca-GitHubActionsCDKRole19D97701-sweSB0Sp33WN'
            ;;
          repo)
            repo="$(echo '${{ github.repository }}' | tr '/' '+')"
            role="arn:aws:iam::511603859520:role/prodActionsCDK@${repo}"
            ;;
          *)
            role='${{ inputs.role-to-assume }}'
            ;;
        esac
        echo "role=${role}" >> "$GITHUB_OUTPUT"

    - if: inputs.role-to-assume
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ steps.resolve-role.outputs.role }}
